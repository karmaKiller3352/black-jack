{"version":3,"sources":["covers/cards.png","ui.js","Card.js","Modal.js","theme.js","helpers.js","covers/cover.png","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","contrast","ModalBG","styled","div","ModalWrapper","btnColor","text","Body","primary","GameBox","secondary","ControlPanel","GameField","gameField","CardsWrapper","CardCover","img","ButtonWrapper","Label","props","top","css","bottom","Points","words","Button","button","Statistic","Money","Bet","CardWrapper","cardCovers","bgp","x","left","keyframes","Card","layer","Modal","open","message","hideAction","onClick","outlines","getPoints","j","generateDeck","deck","positionY","i","positionX","isAce","push","points","background","sort","Math","random","updateScore","cards","aceCount","preTotal","reduce","acc","card","buttonList","gamePlay","start","restart","gameProccess","title","label","App","defaultState","credit","bet","gameStarted","gameOver","playerCards","dealerCards","disabled","playerPoints","dealerPoints","mode","defaultUIState","useState","state","setState","modal","setModal","showModal","setGameOver","prev","setBet","multiple","addPrize","type","prize","playingDeck","dealer","splice","player","useStartingDistribution","makeMove","useCallback","whom","who","nextCard","pop","getNextCard","personDeck","actions","hit","double","stand","useEffect","setTimeout","showCards","arr","length","map","index","src","coverCard","isStarted","size","variant","color","gameAction","ShowControls","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db2c2f89.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cards.cfd0c239.png\";","import styled, { createGlobalStyle, css, keyframes } from \"styled-components\";\nimport cardCovers from './covers/cards.png';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n  }\n  * {\n    box-sizing: border-box;\n    overflow: auto;\n    color: ${({ theme }) => theme.contrast};\n  }\n`\n\nexport const ModalBG = styled.div`\n  position: absolute;\n  height: 100%;\n  top: 0;\n  left: 0;\n  right: 0;\n  opacity: 0.8;\n  z-index: 1000;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.contrast};\n`\n\nexport const ModalWrapper = styled.div`\n  position: absolute;\n  height: 120px;\n  top: 40%;\n  transform: translateY(-50%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 300px;\n  z-index: 1001;\n  background-color: ${({ theme }) => theme.btnColor};\n  border: 1px solid ${({ theme }) => theme.contrast};\n  box-shadow: 0px 2px 10px ${({ theme }) => theme.contrast};\n  text-shadow: 1px 1px 2px ${({ theme }) => theme.text};\n  padding: 20px;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 40px;\n`\n\nexport const Body = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width:  100%;\n  background-color: ${({ theme }) => theme.primary};\n`\nexport const GameBox = styled.div`\n  width: 1024px;\n  height: 768px;\n  min-width: 1024px;\n  min-height: 768px;\n  border-radius: 10px;\n  border: 1px solid ${({ theme }) => theme.contrast};\n  box-shadow: 0px 5px 10px ${({ theme }) => theme.contrast};\n  background-color: ${({ theme }) => theme.secondary};\n  display: flex;\n`\nexport const ControlPanel = styled.div`\n  width: 300px;\n  border-left: 2px solid ${({ theme }) => theme.contrast};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n`\nexport const GameField = styled.div`\n  width: 724px;\n  background-color: ${({ theme }) => theme.gameField};\n  position: relative;\n`\nexport const CardsWrapper = styled.div`\n  width: 110px;\n  height: 157px;\n  position: absolute;\n  right: 20px;\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\nexport const CardCover = styled.img`\n  width: 200px;\n`\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  height: 40%;\n  width: 100%;\n  align-items: center;\n`\n\n\nexport const Label = styled.div`\n  position: absolute;\n  font-size: 30px;\n  font-weight: bold;\n  left: 50px;\n  ${props => {\n    if (props.top) return css`top: 280px;`\n    if (props.bottom) return css`bottom: 280px;`\n  }}\n`\nexport const Points = styled.div`\n  position: absolute;\n  font-size: 30px;\n  right: 50px;\n  span {\n    font-weight: bold;\n    color: ${({ theme }) => theme.words};\n    font-size: 60px;\n  }\n  ${props => {\n    if (props.top) return css`top: 20px;`\n    if (props.bottom) return css`bottom: 20px;`\n  }}\n`\n\n\nexport const Button = styled.button`\n  width: 150px;\n  height: 40px;\n  border-radius: 10px;\n  align-items: center;\n  display: flex;\n  cursor: pointer;\n  justify-content: center;\n  box-shadow: 1px 1px 2px ${({ theme }) => theme.contrast};\n  outline: none;\n  font-size: 20px;\n  color: ${({ theme }) => theme.contrast};\n  text-shadow: 1px 1px 3px #fff;\n  margin-bottom: 20px;\n  background-color: ${({ theme }) => theme.btnColor};\n  :hover {\n    box-shadow: 1px 1px 10px ${({ theme }) => theme.contrast};\n  }\n  :disabled {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n`\n\nexport const Statistic = styled.div`\n  height: 50%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const Money = styled.div`\n  font-size: 55px;\n  color: ${({ theme }) => theme.btnColor};\n  font-weight: bold;\n  font-family: sans-serif;\n  text-shadow: 1px 1px 3px ${({ theme }) => theme.contrast};\n`\n\nexport const Bet = styled.div`\n  margin-top: 40px;\n  font-size: 35px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.contrast};\n  text-shadow: 1px 1px 3px ${({ theme }) => theme.btnColor};\n`\n\n\nexport const CardWrapper = styled.div`\n  width: 106px;\n  height: 154px;\n  position: absolute;\n  background-size: 1695px 650px;\n  background-image: url(${cardCovers});\n  background-repeat: no-repeat;\n  box-shadow: -2px 2px 5px ${({ theme }) => theme.contrast};\n  border: .5px solid ${({ theme }) => theme.contrast};\n  background-position: ${props => props.bgp};\n  background-color: #fff;\n  border-radius: 6px;\n  cursor: pointer;\n  \n  ${props => {\n    const x = props.top ? 90 : 530;\n    return css`\n      animation: ${props => animateCard(20 + props.left, x)} .7s linear;\n      transform: translateX(${20 + props.left}px) translateY(${x}px);\n  `}\n  }\n`\n\nexport function animateCard(left, top) {\n  const moving = keyframes`\n    0% {\n      transform: translateX(595px) translateY(305px);\n    }\n   \n    100% {\n      transform: translateX(${left}px) translateY(${top}px);\n    }\n  `;\n  return moving;\n}","import { CardWrapper } from \"./ui\";\n\nfunction Card(props) {\n  return <CardWrapper layer={props.layer} left={props.left} bgp={props.bgp} top={props.top} />\n}\n\nexport default Card","import { Fragment } from \"react\";\nimport { ModalBG, ModalWrapper } from \"./ui\";\n\nfunction Modal({ open, message, hideAction }) {\n  return open &&\n    <Fragment>\n      <ModalBG onClick={() => hideAction()}/>\n      <ModalWrapper>{message}</ModalWrapper>\n    </Fragment>\n    \n}\n\nexport default Modal","const theme = {\n  primary: '#818c8c',\n  secondary: '#c95533',\n  outlines: '#62b15f',\n  words: '#f2021f',\n  gameField: '#559975',\n  contrast: '#000',\n  btnColor: '#477cd9',\n  text: '#fff'\n}\n\nexport default theme","export const shuffle = (arr) => arr.sort(() =>  Math.random() - 0.5);\n\nexport const isEmpty = (arr) => !(arr && arr.length)\n\nexport const getPoints = (j) => {\n  if (j > 10 && j < 14) return 10\n  if (j === 14) return 11\n  return j\n}\n\n\nexport const generateDeck = () => {\n  const suitCount = 4;\n  const cardCount = 14;\n  const deck = [];\n  let positionY = 0;\n  for (let i = 0; i < suitCount; i++) {\n    let positionX = 0;\n    for (let j = 2; j <= cardCount; j++) {\n      const isAce = j === 14;\n      deck.push({\n        points: getPoints(j),\n        background: `${positionX}px ${positionY}px`,\n        isAce\n      })\n      positionX -= 115;\n    }\n    positionY -= 165;\n  }\n  return shuffle(deck)\n}\n\nexport const useStartingDistribution = (deck) => {\n  const playingDeck = [...deck]\n  const dealer = playingDeck.splice(-1)\n  const player = playingDeck.splice(-2)\n  return {\n    playingDeck,\n    dealer,\n    player\n  }\n}\n\nexport const getNextCard = (deck) => {\n  const playingDeck = [...deck]\n  const nextCard = playingDeck.pop()\n\n  return {\n    playingDeck,\n    nextCard\n  }\n}\n\nexport const updateScore = (cards) => {\n  let isAce = false;\n  let aceCount = 0;\n  let preTotal = cards.reduce((acc, card) => {\n    if (card.isAce) {\n      aceCount += 1;\n      isAce = true;\n    }\n    return acc + card.points\n  }, 0)\n  if (isAce) {\n    for (let i = 1; i <= aceCount; i++) {\n      preTotal -= preTotal > 21 ? 10 : 0\n    }\n  }\n  return preTotal\n}\n\n","export default __webpack_public_path__ + \"static/media/cover.8c65e867.png\";","import { useState, useCallback, useEffect } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport Card from \"./Card\";\nimport Modal from \"./Modal\";\nimport theme from \"./theme\";\nimport {\n  Bet,\n  Body,\n  Button,\n  ButtonWrapper,\n  CardCover,\n  CardsWrapper,\n  ControlPanel,\n  GameBox,\n  GameField,\n  GlobalStyle,\n  Label,\n  Money,\n  Statistic,\n  Points\n} from \"./ui\";\nimport { generateDeck, getNextCard, isEmpty, updateScore, useStartingDistribution } from \"./helpers\";\nimport coverCard from './covers/cover.png';\n\n\nconst buttonList = {\n  gamePlay: {\n    start: 'Start game',\n    restart: 'Play again',\n  },\n  gameProccess: [\n    {\n      title: 'Hit',\n      label: 'hit',\n    },\n    {\n      title: 'Double',\n      label: 'double',\n    },\n    {\n      title: 'Stand',\n      label: 'stand',\n    },\n  ]\n}\n\nconst winPoints = 21;\nconst minBet = 5;\nconst startedMoney = 100;\n\nfunction App() {\n  const defaultState = {\n    credit: startedMoney,\n    bet: minBet,\n    gameStarted: false,\n    gameOver: false,\n    deck: [],\n    playerCards: [],\n    dealerCards: [],\n    disabled: false,\n    playerPoints: 0,\n    dealerPoints: 0,\n    mode: 'player',\n  }\n\n  const defaultUIState = {\n    open: false,\n    message: null\n  }\n\n  const [state, setState] = useState(defaultState)\n  const [modal, setModal] = useState(defaultUIState)\n\n  const setBtnDisabled = () => setState((prev) => ({ ...prev, disabled: true }));\n  const showModal = (message) => setModal({ open: true, message });\n  const hideModal = () => setModal(defaultUIState);\n\n  const setGameOver = () => setState((prev) => ({ ...prev, gameOver: true, disabled: true }))\n  const setMode = (mode) => setState((prev) => ({ ...prev, mode }));\n\n  const setBet = (multiple = 1) => setState((prev) => {\n    const bet = multiple * minBet;\n    return {\n      ...prev,\n      bet: prev.bet + bet,\n      credit: prev.credit - bet,\n    }\n  })\n\n  const addPrize = (type = 'win') => setState((prev) => {\n    const prize = type === 'win' ? prev.credit + prev.bet * 2 : prev.credit + prev.bet\n    return {\n      ...prev,\n      bet: 0,\n      credit: prize\n    }\n  })\n\n  const { playingDeck, dealer, player } = useStartingDistribution(generateDeck())\n\n  const startHandler = () => {\n    setState((prev) => ({\n      ...prev,\n      bet: minBet,\n      credit: prev.credit - minBet,\n      deck: playingDeck,\n      playerCards: player,\n      dealerCards: dealer,\n      gameStarted: true,\n    }))\n  }\n\n  const restartHandler = () => {\n    setState((prev) => ({\n      ...prev,\n      bet: minBet,\n      playerCards: [],\n      dealerCards: [],\n      gameOver: false,\n      gameStarted: false,\n      disabled: false,\n      mode: 'player'\n    }))\n  }\n\n  const makeMove = useCallback((whom) => {\n    const who = `${whom}Cards`;\n\n    setState((prev) => {\n      const { playingDeck, nextCard } = getNextCard(prev.deck);\n      const personDeck = [...prev[who], nextCard];\n\n      return {\n        ...prev,\n        deck: playingDeck,\n        [who]: personDeck\n      }\n    })\n  }, [])\n\n  const actions = {\n    hit: () => {\n      makeMove('player')\n      setBet()\n    },\n    double: () => {\n      makeMove('player')\n      setBet(2)\n    },\n    stand: () => {\n      setBtnDisabled();\n      setMode('dealer');\n    }\n  }\n\n  const setActionHandler = (gameAction) => () => actions[gameAction]()\n\n  useEffect(() => {\n    setState((prev) => {\n      const playerPoints = updateScore(prev.playerCards);\n      const dealerPoints = updateScore(prev.dealerCards);\n\n      return {\n        ...prev,\n        playerPoints,\n        dealerPoints\n      }\n    })\n  }, [state.playerCards, state.dealerCards])\n\n  useEffect(() => {\n    if (state.gameOver) {\n      if (state.dealerPoints > winPoints) {\n        showModal('You win')\n        addPrize()\n      }\n      else if (state.playerPoints > winPoints) {\n        showModal('You lose')\n      }\n      else if (state.playerPoints > state.dealerPoints && state.playerPoints <= winPoints) {\n        showModal('You win')\n        addPrize()\n      }\n      else if (state.playerPoints === state.dealerPoints) {\n        showModal('Drow')\n        addPrize('drow')\n      }\n      else {\n        showModal('You lose')\n      }\n\n    }\n  }, [state.gameOver, state.dealerPoints, state.playerPoints])\n\n  useEffect(() => {\n    const dealerMove = () => {\n      setTimeout(() => {\n        makeMove('dealer')\n      }, 1000)\n    }\n    if (state.mode === 'player' && state.playerPoints > winPoints) setGameOver()\n    if (state.mode === 'dealer') {\n      if (state.dealerPoints > state.playerPoints) {\n        setGameOver()\n      }\n      else {\n        dealerMove()\n      }\n    }\n  }, [state.dealerPoints, state.playerPoints, state.mode, makeMove])\n\n  const ShowControls = () => {\n    const isStarted = state.gameStarted\n\n    return (\n      <ButtonWrapper>\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={isStarted ? () => restartHandler() : () => startHandler()}\n        >\n          {isStarted ? buttonList.gamePlay.restart : buttonList.gamePlay.start}\n        </Button>\n        { state.gameStarted && buttonList.gameProccess.map((button, index) => {\n          return (\n            <Button\n              key={index}\n              disabled={state.disabled}\n              onClick={setActionHandler(button.label)}\n            >\n              {button.title}\n            </Button>\n          )\n        })}\n      </ButtonWrapper>\n    )\n  }\n\n  const showCards = (cards, whom) => {\n    if (!isEmpty(cards)) return cards.map((card, index) => {\n\n      return (\n        <Card\n          key={index}\n          top={whom === 'dealer'}\n          bgp={card.background}\n          points={card.points}\n          left={index * 30}\n          layer={10 + index}\n        />\n      )\n    })\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Body>\n        <Modal message={modal.message} open={modal.open} hideAction={hideModal} />\n        <GameBox>\n          <GameField>\n            <Points top>Points: <span>{state.dealerPoints}</span></Points>\n            {showCards(state.dealerCards, 'dealer')}\n            <Label top>Dealer Hand</Label>\n\n            <Points bottom>Points: <span>{state.playerPoints}</span></Points>\n            {showCards(state.playerCards, 'player')}\n            <Label bottom>Player Hand</Label>\n\n            <CardsWrapper>\n              <CardCover src={coverCard} />\n            </CardsWrapper>\n          </GameField>\n\n          <ControlPanel>\n            <Statistic>\n              <Money>${state.credit}</Money>\n              <Bet>{state.gameStarted && `$${state.bet}`}</Bet>\n            </Statistic>\n            {ShowControls()}\n          </ControlPanel>\n        </GameBox>\n      </Body>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}